{"version":3,"sources":["register.js"],"names":["ModuleListenList","appendModuleRequires","coverNgModule","createInvoke","isRegister","moduleProxy","nextTick","register","registerCache","angular","module","isBootstrap","modules","moduleName","indexOf","method","_i","_len","push","name","length","$isProxy","invokeQueue","normal","isFunction","Error","result","apply","arguments","requires","appendList","baseRequires","req","Array","prototype","normalModule","fn","delay","setTimeout","directive","restrict","compile","provider","$provide","$controllerProvider","$compileProvider","$filterProvider","$injector","$animateProvider","invokeLater","providerCache","providers","registerFunction","runLater","self","this","getInstanceInjector","injector","pname","cacheName","rs","enableDistinst","block","instance","invoke","factory","service","value","constant","animation","filter","controller","config","run","args","rFn","$get","$rootElement","instanceInjector","data","call"],"mappings":"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","file":"register.min.js","sourcesContent":["(function() {\n  var ModuleListenList, appendModuleRequires, coverNgModule, createInvoke, isRegister, moduleProxy, nextTick, register, registerCache;\n\n  register = angular.module('angular.lazy.register', ['ng']);\n\n  register.isBootstrap = false;\n\n  registerCache = {\n    modules: ['ng']\n  };\n\n  register.isRegister = isRegister = function(moduleName) {\n    return registerCache.modules.indexOf(moduleName) !== -1;\n  };\n\n  ModuleListenList = ['provider', 'factory', 'service', 'value', 'constant', 'animation', 'filter', 'controller', 'directive', 'config', 'run'];\n\n  moduleProxy = function(module) {\n    var method, _i, _len;\n    registerCache.modules.push(module.name);\n    for (_i = 0, _len = ModuleListenList.length; _i < _len; _i++) {\n      method = ModuleListenList[_i];\n      module[method] = createInvoke(module, method);\n    }\n    module.$isProxy = true;\n    return module;\n  };\n\n  createInvoke = function(module, method) {\n    var invokeQueue, normal;\n    normal = module[method];\n    if (!normal || !angular.isFunction(normal)) {\n      throw new Error(\"badmethod  no method \" + method + \" name\");\n    }\n    invokeQueue = function() {\n      var result;\n      result = normal.apply(module, arguments);\n      if (register.isBootstrap) {\n        register.register(module, method, arguments);\n      }\n      return result;\n    };\n    return invokeQueue;\n  };\n\n  appendModuleRequires = function(moduleName, requires) {\n    var appendList, baseRequires, module, req, _i, _len;\n    module = angular.module(moduleName);\n    baseRequires = module.requires;\n    appendList = [];\n    for (_i = 0, _len = requires.length; _i < _len; _i++) {\n      req = requires[_i];\n      if (baseRequires.indexOf(req) === -1) {\n        appendList.push(req);\n      }\n    }\n    Array.prototype.push.apply(baseRequires, appendList);\n    return module;\n  };\n\n  coverNgModule = function() {\n    var normalModule;\n    normalModule = angular.module;\n    return angular.module = function(name, requires, fn) {\n      var module;\n      if (requires && isRegister(name)) {\n        return appendModuleRequires(name, requires);\n      }\n      module = normalModule(name, requires, fn);\n      if (module.$isProxy) {\n        return module;\n      }\n      return moduleProxy(module);\n    };\n  };\n\n  nextTick = function(fn, delay) {\n    return setTimeout(fn, delay || 0);\n  };\n\n  register.directive(\"body\", [\n    function() {\n      return {\n        restrict: \"E\",\n        compile: function() {\n          return register.isBootstrap = true;\n        }\n      };\n    }\n  ]).provider(\"register\", [\n    \"$provide\", \"$controllerProvider\", \"$compileProvider\", \"$filterProvider\", \"$injector\", \"$animateProvider\", function($provide, $controllerProvider, $compileProvider, $filterProvider, $injector, $animateProvider) {\n      var invokeLater, providerCache, providers, registerFunction, runLater, self;\n      self = this;\n      providerCache = {};\n      providers = {\n        $provide: $provide,\n        $controllerProvider: $controllerProvider,\n        $compileProvider: $compileProvider,\n        $filterProvider: $filterProvider,\n        $injector: $injector,\n        $animateProvider: $animateProvider,\n        getInstanceInjector: function() {\n          return angular.injector();\n        }\n      };\n      invokeLater = function(pname, method) {\n        var provider;\n        provider = providers[pname];\n        if (!provider) {\n          throw new Error(\"badProvider unsupported provider \" + pname);\n        }\n        return function() {\n          var cacheName, name, rs;\n          name = arguments[0];\n          cacheName = \"\" + method + name;\n          if (self.enableDistinst && providerCache[cacheName]) {\n            return;\n          }\n          rs = provider[method].apply(provider, arguments);\n          providerCache[cacheName] = rs;\n        };\n      };\n      runLater = function() {\n        return function(block) {\n          var instance;\n          instance = providers.getInstanceInjector();\n          return nextTick(function() {\n            return instance.invoke(block);\n          });\n        };\n      };\n      registerFunction = {\n        provider: invokeLater('$provide', 'provider'),\n        factory: invokeLater('$provide', 'factory'),\n        service: invokeLater('$provide', 'service'),\n        value: invokeLater('$provide', 'value'),\n        constant: invokeLater('$provide', 'constant', 'unshift'),\n        animation: invokeLater('$animateProvider', 'register'),\n        filter: invokeLater('$filterProvider', 'register'),\n        controller: invokeLater('$controllerProvider', 'register'),\n        directive: invokeLater('$compileProvider', 'directive'),\n        config: invokeLater('$injector', 'invoke', 'push', \"_configBlocks\"),\n        run: runLater()\n      };\n      register.register = function(module, method, args) {\n        var rFn;\n        rFn = registerFunction[method];\n        if (!rFn) {\n          throw new Error(\"badFunctioin unsupproted register \" + method);\n        }\n        rFn.apply(this, args);\n      };\n      this.$get = [\n        '$rootElement', function($rootElement) {\n          var instanceInjector;\n          instanceInjector = null;\n          providers.getInstanceInjector = function() {\n            if (!instanceInjector) {\n              instanceInjector = $rootElement.data('$injector') || angular.injector();\n            }\n            return instanceInjector;\n          };\n          return register.register;\n        }\n      ];\n      return this;\n    }\n  ]).run(['register', function(service) {}]);\n\n  coverNgModule();\n\n}).call(this);\n"]}