{"version":3,"sources":["angular-lazy.js"],"names":["ModuleListenList","anonFn","appendModuleRequires","coverNgModule","createInvoke","getQueueArguments","head","hitCache","initRegisterCache","isRegister","moduleProxy","nextTick","putRegisterCache","register","registerCache","requireConfig","requireModule","stateModule","angular","module","isBootstrap","moduleName","ng","method","_i","_len","_results","length","push","args","fn","name","isArray","toString","cache","caches","indexOf","$isProxy","invokeQueue","normal","isFunction","Error","result","arguments","apply","requires","appendList","baseRequires","req","Array","prototype","normalModule","delay","setTimeout","directive","restrict","compile","provider","$provide","$controllerProvider","$compileProvider","$filterProvider","$injector","$animateProvider","invokeLater","providerCache","providers","registerFunction","runLater","self","this","getInstanceInjector","injector","pname","rs","block","instance","invoke","factory","service","value","constant","animation","filter","controller","config","run","rFn","$get","$rootElement","instanceInjector","data","document","getElementsByTagName","setConfig","extend","$cacheFactory","getFilePath","getRequireList","list","isString","isObject","forEach","v","k","fileName","relativePath","baseRequire","findRequire","onError","noop","stateName","requireList","getFile","$q","fileCache","$rootScope","ScriptLoad","filePath","deferred","that","get","defer","$promise","promise","onScriptLoad","resolve","put","$apply","onScriptError","reject","remove","loadScript","url","node","bind","createNode","addEventListener","src","appendChild","createElement","type","charset","async","setAttribute","filepath","load","$fileLoad","$stateProvider","$fileLoadProvider","registerState","state","jsRequire","loadFile","requirejs","resolveName","call"],"mappings":"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","file":"angular-lazy.min.js","sourcesContent":["(function() {\n  var ModuleListenList, anonFn, appendModuleRequires, coverNgModule, createInvoke, getQueueArguments, head, hitCache, initRegisterCache, isRegister, moduleProxy, nextTick, putRegisterCache, register, registerCache, requireConfig, requireModule, stateModule;\n\n  register = angular.module('angular.lazy.register', ['ng']);\n\n  register.isBootstrap = false;\n\n  register.isRegister = isRegister = function(moduleName) {\n    return !!registerCache.module[moduleName];\n  };\n\n  ModuleListenList = ['provider', 'factory', 'service', 'value', 'constant', 'animation', 'filter', 'controller', 'directive', 'config', 'run'];\n\n  registerCache = {\n    module: {\n      'ng': true\n    }\n  };\n\n  initRegisterCache = function() {\n    var method, _i, _len, _results;\n    registerCache = {\n      module: {\n        'ng': true\n      }\n    };\n    _results = [];\n    for (_i = 0, _len = ModuleListenList.length; _i < _len; _i++) {\n      method = ModuleListenList[_i];\n      _results.push(registerCache[method] = {});\n    }\n    return _results;\n  };\n\n  initRegisterCache();\n\n  getQueueArguments = function(args) {\n    var fn, name;\n    name = args[0];\n    fn = args[1];\n    if (!fn) {\n      fn = name;\n      name = '@';\n    }\n    if (angular.isArray(fn)) {\n      fn = fn[fn.length - 1];\n    }\n    return {\n      name: name,\n      fn: fn\n    };\n  };\n\n  anonFn = function(fn) {\n    return fn.toString();\n  };\n\n  hitCache = function(method, args) {\n    var cache, caches, fn, name;\n    caches = registerCache[method];\n    args = getQueueArguments(args);\n    name = args.name;\n    fn = args.fn;\n    cache = caches[name];\n    if (!cache) {\n      return false;\n    }\n    if (!angular.isArray(cache)) {\n      return true;\n    }\n    return cache.indexOf(anonFn(fn)) > -1;\n  };\n\n  putRegisterCache = function(method, args) {\n    var caches, fn, name;\n    caches = registerCache[method];\n    args = getQueueArguments(args);\n    name = args.name;\n    fn = args.fn;\n    if (['run', 'config', 'directive'].indexOf(method) > -1) {\n      caches[name] = caches[name] || [];\n      caches[name].push(anonFn(fn));\n    } else {\n      caches[name] = true;\n    }\n  };\n\n  moduleProxy = function(module) {\n    var method, _i, _len;\n    registerCache.module[module.name] = true;\n    for (_i = 0, _len = ModuleListenList.length; _i < _len; _i++) {\n      method = ModuleListenList[_i];\n      module[method] = createInvoke(module, method);\n    }\n    module.$isProxy = true;\n    return module;\n  };\n\n  createInvoke = function(module, method) {\n    var invokeQueue, normal;\n    normal = module[method];\n    if (!normal || !angular.isFunction(normal)) {\n      throw new Error(\"badmethod  no method \" + method + \" name\");\n    }\n    invokeQueue = function() {\n      var result;\n      if (hitCache(method, arguments)) {\n        return module;\n      }\n      result = normal.apply(module, arguments);\n      putRegisterCache(method, arguments);\n      if (register.isBootstrap) {\n        register.register(module, method, arguments);\n      }\n      return result;\n    };\n    return invokeQueue;\n  };\n\n  appendModuleRequires = function(moduleName, requires) {\n    var appendList, baseRequires, module, req, _i, _len;\n    module = angular.module(moduleName);\n    baseRequires = module.requires;\n    appendList = [];\n    for (_i = 0, _len = requires.length; _i < _len; _i++) {\n      req = requires[_i];\n      if (baseRequires.indexOf(req) === -1) {\n        appendList.push(req);\n      }\n    }\n    Array.prototype.push.apply(baseRequires, appendList);\n    return module;\n  };\n\n  coverNgModule = function() {\n    var normalModule;\n    normalModule = angular.module;\n    return angular.module = function(name, requires, fn) {\n      var module;\n      if (requires && isRegister(name)) {\n        return appendModuleRequires(name, requires);\n      }\n      module = normalModule(name, requires, fn);\n      if (module.$isProxy) {\n        return module;\n      }\n      return moduleProxy(module);\n    };\n  };\n\n  nextTick = function(fn, delay) {\n    return setTimeout(fn, delay || 0);\n  };\n\n  register.directive(\"body\", [\n    function() {\n      return {\n        restrict: \"E\",\n        compile: function() {\n          return register.isBootstrap = true;\n        }\n      };\n    }\n  ]).provider(\"register\", [\n    \"$provide\", \"$controllerProvider\", \"$compileProvider\", \"$filterProvider\", \"$injector\", \"$animateProvider\", function($provide, $controllerProvider, $compileProvider, $filterProvider, $injector, $animateProvider) {\n      var invokeLater, providerCache, providers, registerFunction, runLater, self;\n      self = this;\n      providerCache = {};\n      providers = {\n        $provide: $provide,\n        $controllerProvider: $controllerProvider,\n        $compileProvider: $compileProvider,\n        $filterProvider: $filterProvider,\n        $injector: $injector,\n        $animateProvider: $animateProvider,\n        getInstanceInjector: function() {\n          return angular.injector();\n        }\n      };\n      invokeLater = function(pname, method) {\n        var provider;\n        provider = providers[pname];\n        if (!provider) {\n          throw new Error(\"badProvider unsupported provider \" + pname);\n        }\n        return function() {\n          var rs;\n          rs = provider[method].apply(provider, arguments);\n        };\n      };\n      runLater = function() {\n        return function(block) {\n          var instance;\n          instance = providers.getInstanceInjector();\n          return nextTick(function() {\n            return instance.invoke(block);\n          });\n        };\n      };\n      registerFunction = {\n        provider: invokeLater('$provide', 'provider'),\n        factory: invokeLater('$provide', 'factory'),\n        service: invokeLater('$provide', 'service'),\n        value: invokeLater('$provide', 'value'),\n        constant: invokeLater('$provide', 'constant', 'unshift'),\n        animation: invokeLater('$animateProvider', 'register'),\n        filter: invokeLater('$filterProvider', 'register'),\n        controller: invokeLater('$controllerProvider', 'register'),\n        directive: invokeLater('$compileProvider', 'directive'),\n        config: invokeLater('$injector', 'invoke', 'push', \"_configBlocks\"),\n        run: runLater()\n      };\n      register.register = function(module, method, args) {\n        var rFn;\n        rFn = registerFunction[method];\n        if (!rFn) {\n          throw new Error(\"badFunctioin unsupproted register \" + method);\n        }\n        rFn.apply(this, args);\n      };\n      this.$get = [\n        '$rootElement', function($rootElement) {\n          var instanceInjector;\n          instanceInjector = null;\n          providers.getInstanceInjector = function() {\n            if (!instanceInjector) {\n              instanceInjector = $rootElement.data('$injector') || angular.injector();\n            }\n            return instanceInjector;\n          };\n          return register.register;\n        }\n      ];\n      return this;\n    }\n  ]).run(['register', function(service) {}]);\n\n  coverNgModule();\n\n  requireModule = angular.module('angular.lazy.require', ['ng']);\n\n  head = document.getElementsByTagName(\"head\")[0];\n\n  requireConfig = {};\n\n  requireModule.setConfig = function(config) {\n    if (!config) {\n      requireConfig = {};\n    } else {\n      requireConfig = angular.extend(requireConfig, config);\n    }\n    return requireModule;\n  };\n\n  requireModule.factory(\"$fileCache\", [\n    \"$cacheFactory\", function($cacheFactory) {\n      return $cacheFactory(\"fileCache\");\n    }\n  ]).provider(\"$fileLoad\", [\n    function() {\n      var getFilePath, getRequireList, provider;\n      getRequireList = function(config) {\n        var list;\n        if (angular.isArray(config)) {\n          return config;\n        }\n        list = [];\n        if (!config) {\n\n        } else if (angular.isString(config)) {\n          list.push(config);\n        } else if (angular.isObject(config)) {\n          list = [];\n          angular.forEach(config, function(v, k) {\n            return Array.prototype.push.apply(list, getRequireList(v));\n          });\n        }\n        return list;\n      };\n      getFilePath = function(fileName, relativePath) {\n        var baseRequire;\n        baseRequire = requireModule.findRequire();\n        if (relativePath) {\n          baseRequire = baseRequire[relativePath];\n        }\n        if (!baseRequire) {\n          return '';\n        }\n        return baseRequire[fileName];\n      };\n      provider = this;\n      provider.onError = angular.noop;\n      provider.setConfig = requireModule.setConfig;\n      provider.findRequire = function(stateName) {\n        var requireList;\n        requireList = requireConfig[stateName] || [];\n        requireList = getRequireList(requireList);\n        return requireList;\n      };\n      provider.getFile = function() {};\n      provider.$get = [\n        '$q', '$fileCache', '$rootScope', function($q, fileCache, $rootScope) {\n          var ScriptLoad;\n          ScriptLoad = (function() {\n            function ScriptLoad(filePath) {\n              var deferred, that;\n              if (filePath && (that = fileCache.get(filePath))) {\n                return that;\n              }\n              deferred = $q.defer();\n              this.$promise = deferred.promise;\n              this.onScriptLoad = function() {\n                deferred.resolve(123);\n                fileCache.put(filePath, true);\n                $rootScope.$apply();\n              };\n              this.onScriptError = function() {\n                deferred.reject('bad request');\n                fileCache.remove(filePath);\n                $rootScope.$apply();\n                angular.isFunction(provider.onError) && provider.onError();\n              };\n              if (!filePath) {\n                deferred.reject('empty path');\n              } else {\n                fileCache.put(filePath, this);\n                this.loadScript(filePath);\n              }\n              return this;\n            }\n\n            ScriptLoad.prototype.loadScript = function(url) {\n              var node, onScriptError, onScriptLoad;\n              onScriptError = this.onScriptError.bind(this);\n              onScriptLoad = this.onScriptLoad.bind(this);\n              node = this.createNode();\n              node.addEventListener('load', onScriptLoad);\n              node.addEventListener('error', onScriptError);\n              node.src = url;\n              return head.appendChild(node);\n            };\n\n            ScriptLoad.prototype.createNode = function() {\n              var node;\n              node = document.createElement(\"script\");\n              node.type = \"text/javascript\";\n              node.charset = 'utf-8';\n              node.async = true;\n              node.setAttribute && node.setAttribute(\"ng-lazy\", \"load\");\n              return node;\n            };\n\n            return ScriptLoad;\n\n          })();\n          return provider.getFile = function(filepath) {\n            var load;\n            load = new ScriptLoad(filepath);\n            if (load.$promise) {\n              return load.$promise;\n            } else {\n              return load;\n            }\n          };\n        }\n      ];\n      return provider;\n    }\n  ]).run([\"$fileLoad\", function($fileLoad) {}]);\n\n  stateModule = angular.module('angular.lazy.state', ['ng', 'ui.router', 'angular.lazy.require', 'angular.lazy.register']);\n\n  stateModule.config([\n    '$stateProvider', '$fileLoadProvider', function($stateProvider, $fileLoadProvider) {\n      var registerState;\n      registerState = $stateProvider.state;\n      return $stateProvider.state = function(name, config) {\n        var jsRequire, loadFile, resolve;\n        if (config.requirejs) {\n          jsRequire = config.requirejs;\n        } else {\n          jsRequire = $fileLoadProvider.findRequire(name);\n        }\n        if (jsRequire && (resolve = config.resolve || {})) {\n          loadFile = [];\n          angular.forEach(jsRequire, function(v, k) {\n            var resolveName;\n            resolveName = \"loadJSFile\" + k;\n            resolve[resolveName] = function() {\n              return $fileLoadProvider.getFile(v, name);\n            };\n            loadFile.push(resolveName);\n          });\n          loadFile.push(angular.noop);\n          resolve.loadFile = loadFile;\n          config.resolve = resolve;\n        }\n        return registerState.apply(this, arguments);\n      };\n    }\n  ]);\n\n}).call(this);\n"]}